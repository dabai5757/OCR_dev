# Define upstream server

upstream frontend {
    server frontend:${FRONT_CONTAINER_PORT};
}

map $TAG $auth_proxy_url {
    dev     https://host.docker.internal:30443;  # 開発環境
    stg     https://${SERVER_ADDRESS}:30443;    # ステージング環境
    prod    https://${SERVER_ADDRESS}:40443;    # 本番環境
}

map $TAG $login_redirect_url {
    dev     https://127.0.0.1:30443;            # 開発環境
    stg     https://${SERVER_ADDRESS}:30443;    # ステージング環境
    prod    https://${SERVER_ADDRESS}:40443;    # 本番環境
}


server {
    listen 80;
    server_name ${SERVER_ADDRESS};

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen ${NGINX_PORT} ssl;
    server_name ${SERVER_ADDRESS};

    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    client_max_body_size 10485760000; # 10GB

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location ^~ /api/auth/status {
        resolver 127.0.0.11;
        proxy_pass $auth_proxy_url/api/auth/status;

        # 必要なヘッダーを転送
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass_request_body off;  # ボディは不要
        proxy_set_header Content-Length "";
    }


    location /aibt-${TAG}/ {

        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Proto https;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }


    location /output_txt_files {
        alias /var/www/ai_server/output_txt_files;
        autoindex on;
        types {
            text/plain txt;
        }
        default_type application/octet-stream;
        add_header Content-Disposition "attachment";
    }

    location @login_redirect {
        return 302 $login_redirect_url/AIportal-${TAG}/login;
    }

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
